<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CFW</name>
    </assembly>
    <members>
        <member name="M:CFW.CommCmdBase.MakeCommand">
            <summary>
            生成通讯 byte[] 命令
            </summary>  
        </member>
        <member name="M:CFW.CommCmdBase.ProcessReceived(System.Byte[])">
            <param name="data">返回数据</param>
            <returns>返回数据的状态</returns>
        </member>
        <member name="P:CFW.CommCmdBase.LatencyTime">
            <summary> 
            命令的等待时间 (毫秒)
            </summary>
            <remarks>
            返回数据应该在该时间内传回，到达时间后CommPortProxy会返回接收到的数据
            </remarks>
            
        </member>
        <member name="P:CFW.CommCmdBase.Station">
            <summary>
            获取或设置站点
            </summary>
        </member>
        <member name="F:CFW.TaskStrategy.m_Owning">
            <summary>
            
            </summary>
        </member>
        <member name="M:CFW.TaskStrategy.NeedExecute">
            <summary>
            获取一个值，该值指示Task是否需要执行。
            </summary>
            <returns></returns>
        </member>
        <member name="M:CFW.TaskStrategy.NeedExecute(System.DateTime)">
            <summary>
            获取一个值，该值指示Task是否需要执行。
            </summary>
            <returns></returns>
        </member>
        <member name="P:CFW.TaskStrategy.Owning">
            <summary>
            获取或设置和该策略所关联的Task
            </summary>
        </member>
        <member name="P:CFW.TaskStrategy.CanRemove">
            <summary>
            获取一个值，该值指示该Task是否可以被删除。
            </summary>
            <remarks>
            TaskManager会根据该标记自动删除Task。
            </remarks>
        </member>
        <member name="P:CFW.TaskStrategy.FirstExecute">
            <summary>
            获取一个值，该值指示该Task是否需要首先执行。
            </summary>
        </member>
        <member name="M:CFW.CycleTaskStrategy.NeedExecute(System.DateTime)">
            <summary>
            获取一个值，该值指示Task是否需要执行。
            </summary>
        </member>
        <member name="P:CFW.CycleTaskStrategy.Cycle">
            <summary>
            获取或设置执行周期
            </summary>
        </member>
        <member name="T:CFW.CommResultState">
            <summary>
            通讯结果状态
            </summary>
        </member>
        <member name="F:CFW.CommResultState.UnknownError">
            <summary> 未知错误 / 初始化 </summary>
        </member>
        <member name="F:CFW.CommResultState.LengthError">
            <summary> 长度错误 </summary>
        </member>
        <member name="F:CFW.CommResultState.CheckError">
            <summary> 校验错误 </summary>
        </member>
        <member name="F:CFW.CommResultState.NullData">
            <summary> 无数据 </summary>
        </member>
        <member name="F:CFW.CommResultState.Correct">
            <summary> 正确的 </summary>
        </member>
        <member name="F:CFW.CommResultState.DataError">
            <summary> 数据错误 </summary>
        </member>
        <member name="T:CFW.TimePointFrequency">
            <summary>
            周期
            </summary>
        </member>
        <member name="T:CFW.ImmediateTaskStrategy">
            <summary>
            立即执行且只执行一次的Task
            </summary>
        </member>
        <member name="P:CFW.OperationLog.Content">
            <summary>
            
            </summary>
        </member>
        <member name="P:CFW.OperationLog.Operation">
            <summary>
            
            </summary>
        </member>
        <member name="P:CFW.OperationLog.Remark">
            <summary>
            
            </summary>
        </member>
        <member name="F:CFW.OperationLogsCollection._maxCount">
            <summary>
            can save max count of logs. 
            default to 2000.
            min count to 1000.
            </summary>
        </member>
        <member name="E:CFW.OperationLogsCollection.Filling">
            <summary>
            记录数将要到达最大时触发次事件。
            </summary>
        </member>
        <member name="T:CFW.Resources">
            <summary>
            Exposes a <see cref="T:Infragistics.Shared.ResourceCustomizer"/> instance for this assembly. 
            </summary>
            <seealso cref="P:CFW.Resources.Customizer"/> 
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="P:CFW.Resources.Customizer">
            <summary>
            Returns the <see cref="T:Infragistics.Shared.ResourceCustomizer"/> for this assembly.
            </summary>
            <seealso cref="T:Infragistics.Shared.ResourceCustomizer"/> 
        </member>
        <member name="M:Infragistics.Shared.LocalizedCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Returns the localized category name
            </summary>
            <param name="value">Name of the category to retreive</param>
            <returns>The localized string value</returns>
        </member>
        <member name="P:CFW.Station.Description">
            <summary>
            获取或设置站描述
            </summary>
        </member>
        <member name="P:CFW.Station.StationName">
            <summary>
            获取或设置站名称
            </summary>
            <remarks>
            名称首尾不包含空格
            同一个集合中名称不能相同（不区分大小写）
            </remarks>
        </member>
        <member name="P:CFW.Station.Address">
            <summary>
            获取或设置地址
            </summary>
        </member>
        <member name="M:CFW.StationsCollection.InternalAdd(CFW.Station)">
            <summary>
            添加一个站到集合中
            </summary>
            <param name="station"></param>
            <returns></returns>
        </member>
        <member name="T:CFW.Task">
            <summary>
            
            </summary>
        </member>
        <member name="F:CFW.Task.m_LastSendDateTime">
            <summary>
            最后一次发送命令的时间
            </summary>
        </member>
        <member name="F:CFW.Task.m_LastReceivedDateTime">
            <summary>
            最后一次接收数据的时间
            </summary>
        </member>
        <member name="F:CFW.Task.m_LastSendDatas">
            <summary>
            最后一次发送的数据
            </summary>
        </member>
        <member name="F:CFW.Task.m_LastExecute">
            <summary>
            最后一次执行该Task的时间
            </summary>
        </member>
        <member name="F:CFW.Task.m_LastCommResultState">
            <summary>
            保存最后一次的通讯的结果
            </summary>
        </member>
        <member name="F:CFW.Task.m_LastReceived">
            <summary>
            保存最后一次通讯接收的数据
            </summary>
        </member>
        <member name="M:CFW.Task.#ctor(System.String,CFW.CommCmdBase,CFW.TaskStrategy)">
            <summary>
            
            </summary>
            <param name="name">Task的名称</param>
            <param name="commCmd">执行的命令</param>
            <param name="taskStrategy">使用的策略</param>
        </member>
        <member name="M:CFW.Task.NeedExecute">
            <summary>
            在当前时间，该Task是否需要执行
            </summary>
            <returns></returns>
        </member>
        <member name="M:CFW.Task.NeedExecute(System.DateTime)">
            <summary>
            在指定的时间，该Task是否需要执行
            </summary>
            <param name="dt">指定的时间</param>
            <returns></returns>
        </member>
        <member name="M:CFW.Task.Execute(CFW.CommPortProxy)">
            <summary>
            执行Task
            </summary>
            <param name="commPortProxy">通过哪个串口执行</param>
        </member>
        <member name="M:CFW.Task.OnExecute(CFW.CommPortProxy,CFW.CommCmdBase)">
            <summary>
            
            </summary>
            <param name="commPortProxy"></param>
            <param name="cmd"></param>
        </member>
        <member name="M:CFW.Task.ProcessReceived(System.Byte[])">
            <summary>
            处理接收到的数据
            </summary>
            <param name="received"></param>
        </member>
        <member name="M:CFW.Task.OnProcessReceived(System.Byte[])">
            <summary>
            
            </summary>
        </member>
        <member name="P:CFW.Task.CanRemove">
            <summary>
            获取该Task是否可以删除标记
            </summary>
        </member>
        <member name="P:CFW.Task.Description">
            <summary>
            获取或设置Task描述
            </summary>
        </member>
        <member name="P:CFW.Task.LastExecute">
            <summary>
            获取或设置最后执行时间
            </summary>
        </member>
        <member name="P:CFW.Task.CommCmd">
            <summary>
            获取命令,只读
            </summary>
        </member>
        <member name="P:CFW.Task.TaskStrategy">
            <summary>
            获取或设置Task策略
            </summary>
        </member>
        <member name="P:CFW.Task.LastSendDateTime">
            <summary>
            获取最后发送命令时间
            </summary>
        </member>
        <member name="P:CFW.Task.LastReceivedDateTime">
            <summary>
            获取最后接受数据的时间
            </summary>
        </member>
        <member name="P:CFW.Task.LastSendDatas">
            <summary>
            获取最后发送的命令数据
            </summary>
        </member>
        <member name="T:CFW.TaskScheduler">
            <summary>
            
            </summary>
        </member>
        <member name="F:CFW.TaskScheduler.DEFAULT_INTERVAL">
            <summary>
            默认扫描间隔100毫秒
            </summary>
        </member>
        <member name="F:CFW.TaskScheduler.m_Tasks">
            <summary>
            Task 集合
            </summary>
        </member>
        <member name="F:CFW.TaskScheduler.m_CommPortProxy">
            <summary>
            命令由该CommPort发送
            </summary>
        </member>
        <member name="F:CFW.TaskScheduler.m_ActiveTask">
            <summary>
            当前正在执行的Task
            </summary>
        </member>
        <member name="F:CFW.TaskScheduler.m_SchedulerTimer">
            <summary>
            
            </summary>
        </member>
        <member name="M:CFW.TaskScheduler.#ctor(CFW.CommPortProxy)">
            <summary>
            
            </summary>
            <param name="commPortProxy"></param>
        </member>
        <member name="M:CFW.TaskScheduler.FindNeedExecuteTask">
            <summary>
            查找需要执行的Task
            </summary>
            <returns>找到则返回需要执行的Task, 否则返回null</returns>
            <remarks>
            如果有Task正在执行,返回null
            </remarks>
        </member>
        <member name="M:CFW.TaskScheduler.OnReceiveComplete(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:CFW.TaskScheduler.m_Tasks_SubObjectPropChanged(Infragistics.Shared.PropChangeInfo)">
            <summary>
            
            </summary>
            <param name="propChange"></param>
        </member>
        <member name="E:CFW.TaskScheduler.Executing">
            <summary>
            Scheduler 
            </summary>
        </member>
        <member name="E:CFW.TaskScheduler.Executed">
            <summary>
            
            </summary>
        </member>
        <member name="P:CFW.TaskScheduler.Enabled">
            <summary>
            获取或设置一个值，该值指示Scheduler是否正在运行
            </summary>
        </member>
        <member name="P:CFW.TaskScheduler.Interval">
            <summary>
            获取或设置Scheduler的扫描时间间隔
            </summary>
        </member>
        <member name="P:CFW.TaskScheduler.ActiveTask">
            <summary>
            获取活动的Task,如果没有Task处于活动状态则返回null.
            </summary>
        </member>
        <member name="P:CFW.TaskScheduler.CommPortProxy">
            <summary>
            
            </summary>
        </member>
        <member name="P:CFW.TaskScheduler.ReceiveCompleteHandler">
            <summary>
            
            </summary>
        </member>
        <member name="T:CFW.TaskSchedulersCollection">
            <summary>
            TaskSchedulersCollection 的摘要说明。
            </summary>
        </member>
        <member name="T:CFW.TasksCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:CFW.TasksCollection.Add(CFW.Task)">
            <summary>
            添加一个新的Task, 添加时会根据task.TaskStrategy.FirstExecute值来决定加入到
            集合的末尾或被第一个执行的位置。
            </summary>
            <param name="task"></param>
        </member>
        <member name="M:CFW.TasksCollection.AddFirstExectueTask(CFW.Task)">
            <summary>
            将task添加到集合众会被第一个执行的位置
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:CFW.TasksCollection.GetTask(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CFW.TasksCollection.Remove(CFW.Task)">
            <summary>
            移除一个Task
            </summary>
            <param name="task">被移除的Task</param>
        </member>
        <member name="M:CFW.TasksCollection.RemoveAt(System.Int32)">
            <summary>
            移除一个Task
            </summary>
            <param name="index">被移除的Task的索引</param>
        </member>
        <member name="M:CFW.TasksCollection.Clear">
            <summary>
            清除该集合中的所有Task
            </summary>
        </member>
        <member name="M:CFW.TasksCollection.Insert(System.Int32,CFW.Task)">
            <summary>
            插入一个Task
            </summary>
            <param name="index"></param>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="T:CFW.TimePoint">
            <summary>
            
            </summary>
            
        </member>
        <member name="M:CFW.TimePoint.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            每天
            </summary>
            <param name="Hour"></param>
            <param name="Minute"></param>
            <param name="Second"></param>
        </member>
        <member name="M:CFW.TimePoint.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            每月
            </summary>
            <param name="Day"></param>
            <param name="Hour"></param>
            <param name="Minute"></param>
            <param name="Second"></param>
        </member>
        <member name="M:CFW.TimePoint.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            每年
            </summary>
            <param name="Month"></param>
            <param name="Day"></param>
            <param name="Hour"></param>
            <param name="Minute"></param>
            <param name="Second"></param>
        </member>
        <member name="M:CFW.TimePoint.#ctor(System.DayOfWeek,System.Int32,System.Int32,System.Int32)">
            <summary>
            每周
            </summary>
            <param name="Week"></param>
            <param name="Hour"></param>
            <param name="Minute"></param>
            <param name="Second"></param>
        </member>
        <member name="M:CFW.TimePoint.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            一次的
            </summary>
            <param name="Year"></param>
            <param name="Month"></param>
            <param name="Day"></param>
            <param name="Hour"></param>
            <param name="Minute"></param>
            <param name="Second"></param>
        </member>
        <member name="M:CFW.TimePoint.InTimePoint(System.DateTime)">
            <summary>
            判断一个时间是否在该时间点范围内
            </summary>
            <param name="datetime"></param>
            <returns></returns>
        </member>
        <member name="M:CFW.TimePoint.InTime(System.DateTime)">
            <summary>
            判断一个时间是否在时间点范围内,仅对时间进行比较，不包括日期。
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="T:CFW.TimePointTaskStrategy">
            <summary>
            在指定的Time point执行Task
            </summary>
            
        </member>
        <member name="M:CFW.Utility.Equals(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            不区分大小写，不包含首尾空格字符串比较
            </summary>
            <param name="s1"></param>
            <param name="s2"></param>
            <param name="ignoreCase">忽略大小写</param>
            <param name="trim">移除所有空格</param>
            <returns></returns>
        </member>
        <member name="T:CFW.CommPortProxy">
            <summary>
            串口代理
            </summary>
            <remarks>
            serialize data:
            1. commport
            2. settings
            </remarks>
        </member>
        <member name="M:CFW.CommPortProxy.initialize(System.Int16,System.String)">
            <summary>
            
            </summary>
            <param name="commPort"></param>
            <param name="settings"></param>
        </member>
        <member name="M:CFW.CommPortProxy.RegisterOnCommEvent">
            <summary>
            
            </summary>
        </member>
        <member name="M:CFW.CommPortProxy.Send(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="byteCommand"></param>
            <param name="latencyTime"></param>
        </member>
        <member name="M:CFW.CommPortProxy.m_Timer_Tick(System.Object,System.EventArgs)">
            <summary>
            接收到时
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:CFW.CommPortProxy.IsReceiving">
            <summary>
            是否正在接收数据
            </summary>
        </member>
        <member name="T:CFW.CommPortProxy.CommPortProxyState">
            <summary>
            
            </summary>
        </member>
        <member name="F:CFW.CommPortProxy.CommPortProxyState.None">
            <summary> 无动作 </summary>
        </member>
        <member name="F:CFW.CommPortProxy.CommPortProxyState.Receiving">
            <summary> 正在接收返回数据 </summary>
        </member>
    </members>
</doc>
