using System;
using System.Windows.Forms;
using Microsoft.Office.Interop.Excel;
using System.IO;
using System.Globalization;
using System.Drawing;
using FlexCel.Core;
using FlexCel.XlsAdapter;
using System.Runtime.InteropServices;

namespace Tool
{
    public class Export
    {
        //[DllImport("user32.dll", SetLastError = true)]
        //static extern int GetWindowThreadProcessId(IntPtr hWnd, out int lpdwProcessId);

        //public static void saveAs(DataGridView gridView, string name) //导出Excel
        //{
        //    if (gridView.RowCount < 1)
        //    {
        //        MessageBox.Show("没有可导出的数据", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
        //        return;
        //    }
        //    if (gridView.RowCount >300)
        //    {
        //        if (MessageBox.Show("导出数据过多，这可能需要几分钟？", "提示", MessageBoxButtons.YesNo, MessageBoxIcon.Information) == DialogResult.Yes)
        //        {
        //            return;
        //        }
        //    }

        //    SaveFileDialog dialog = new SaveFileDialog();
        //    dialog.RestoreDirectory = true;
        //    dialog.Filter = "Excel(*.xls)|*.xls|All Files(*.*)|*.*";
        //    dialog.FileName = "*.xls";
        //    if (dialog.ShowDialog() == DialogResult.OK)
        //    {
        //        Microsoft.Office.Interop.Excel.Application xlApp = new Microsoft.Office.Interop.Excel.Application();
        //        object missing = System.Reflection.Missing.Value;
        //        try
        //        {
        //            if (xlApp == null)
        //            {
        //                MessageBox.Show("无法创建Excel对象，可能您的计算机未安装Excel");
        //                return;
        //            }

        //            Microsoft.Office.Interop.Excel.Workbooks xlBooks = xlApp.Workbooks;
        //            Microsoft.Office.Interop.Excel.Workbook xlBook = xlBooks.Add(Microsoft.Office.Interop.Excel.XlWBATemplate.xlWBATWorksheet);
        //            Microsoft.Office.Interop.Excel.Worksheet xlSheet = (Microsoft.Office.Interop.Excel.Worksheet)xlBook.Worksheets[1];
        //            Microsoft.Office.Interop.Excel.Range range = null;
        //            //  Microsoft.Office.Interop.Excel.Range range1 = null;
        //            //****** 抬头 *********************************************************************************

        //            range = xlSheet.get_Range(xlSheet.Cells[1, 1], xlSheet.Cells[1, gridView.Columns.Count]);

        //            //合并单元格
        //            range.Merge(missing);
        //            //自适应列宽
        //            range.Columns.AutoFit();
        //            // 设置单元格左边框加粗 
        //            //   range.Borders[XlBordersIndex.xlEdgeLeft].Weight = XlBorderWeight.xlThick;
        //            // 设置单元格右边框加粗 
        //            //   range.Borders[XlBordersIndex.xlEdgeRight].Weight = XlBorderWeight.xlThick;
        //            range.HorizontalAlignment = XlHAlign.xlHAlignCenter;// 设置单元格水平居中
        //            range.Value2 = name;
        //            range.Font.Bold = true;//粗体 
        //            //range1.Value2 = "开始日期：" + this.dateTimePicker1.Value.ToShortDateString() + "结束日期：" + this.dateTimePicker2.Value.ToShortDateString();
        //            range.Font.Size = 14;                        // 设置字体大小 
        //            //   range.Font.ColorIndex = 5;                  // 设置字体颜色                     
        //            //   range.Interior.ColorIndex = 6; // 设置单元格背景色 
        //            range.RowHeight = 25;           // 设置行高 
        //            range.ColumnWidth = 10;         // 设置列宽


        //            for (int i = 0; i < gridView.ColumnCount; i++)
        //            {
        //                xlSheet.Cells[2, i + 1] = gridView.Columns[i].HeaderText.ToString();
        //                range = (Microsoft.Office.Interop.Excel.Range)xlSheet.Cells[2, i + 1];
        //                //       range.Interior.ColorIndex = 15;//背景颜色
        //                range.Font.Size = 12;//字体大小 
        //                //加边框 
        //                range.BorderAround(Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous, Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, null);
        //                range.EntireColumn.AutoFit();//自动调整列宽 
        //                range.EntireRow.AutoFit();//自动调整行高 
        //                range.HorizontalAlignment = XlHAlign.xlHAlignCenter;//居中

        //            }

        //            //-----------------------设置单元格--------------------------------------------------------------------------------
        //            //标题栏 
        //            //    range = xlSheet.get_Range(xlSheet.Cells[2, 1], xlSheet.Cells[2, gridView.Columns.Count]);
        //            ////    range.Interior.ColorIndex = 45;//设置标题背景色为 浅橙色 
        //            //    range.Font.Bold = true;//标题字体加粗


        //            for (int i = 0; i < gridView.Rows.Count; i++)
        //            {
        //                for (int j = 0; j < gridView.ColumnCount; j++)
        //                {
        //                    xlSheet.Cells[i + 3, j + 1] = "" + gridView[j, i].Value.ToString();
        //                    range = (Microsoft.Office.Interop.Excel.Range)xlSheet.Cells[i + 3, j + 1];
        //                    range.Font.Size = 10;//字体大小 
        //                    //加边框 
        //                    range.BorderAround(Microsoft.Office.Interop.Excel.XlLineStyle.xlContinuous, Microsoft.Office.Interop.Excel.XlBorderWeight.xlThin, Microsoft.Office.Interop.Excel.XlColorIndex.xlColorIndexAutomatic, null);
        //                    range.EntireColumn.AutoFit();//自动调整列宽 
        //                    range.HorizontalAlignment = XlHAlign.xlHAlignCenter;
        //                }

        //            }

        //            //***** 格式设定 *****************************************************************************
        //            if (xlSheet != null)
        //            {
        //                xlSheet.SaveAs(dialog.FileName, missing, missing, missing, missing, missing, missing, missing, missing, missing);
        //             //   xlApp.Visible = true;
        //            }


        //        }
        //        catch (Exception)
        //        {
        //            // MessageBox.Show(ex.ToString());
        //            xlApp.Quit();
        //            throw;
        //        }
        //        try
        //        {
        //            if (xlApp != null)
        //            {
        //                int lpdwProcessId;
        //                GetWindowThreadProcessId(new IntPtr(xlApp.Hwnd), out lpdwProcessId);
        //                System.Diagnostics.Process.GetProcessById(lpdwProcessId).Kill();
        //                System.Diagnostics.Process.Start(dialog.FileName); 
        //            }
        //        }
        //        catch { }

                
            

        //    }
        //}

        public static void saveAs(DataGridView dgv,string name)
        {
            if (dgv.RowCount < 1)
            {
                MessageBox.Show("没有可导出的数据", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                return;
            }
            SaveFileDialog dialog = new SaveFileDialog();
            dialog.RestoreDirectory = true;
            dialog.Filter = "Excel(*.xls)|*.xls|All Files(*.*)|*.*";
            dialog.FileName = DateTime.Now.Date.ToString("yyyyMMdd")+ ".xls";
            if (dialog.ShowDialog() == DialogResult.OK)
            {

                XlsFile xls = new XlsFile(true);
                xls.NewFile(1);    //Create a new Excel file with 1 sheet.
                xls.ActiveSheet = 1;    //Set the sheet we are working in.
                xls.SheetName = "Sheet1"; //Sheet Options 

                //Styles.默认单元格格式
                TFlxFormat StyleFmt;
                StyleFmt = xls.GetStyle("Normal");
                StyleFmt.Font.Name = "宋体";
                StyleFmt.Font.Size20 = 240;
                StyleFmt.Font.CharSet = 134;
                xls.SetStyle("Normal", StyleFmt);

                //Printer Settings 默认打印设置
                xls.SetPrintMargins(new TXlsMargins(0.7, 0.75, 0.7, 0.75, 0.3, 0.3));
                xls.PrintXResolution = 600;
                xls.PrintYResolution = 600;
                xls.PrintOptions = TPrintOptions.Orientation;
                xls.PrintPaperSize = TPaperSize.A4;

                //Set up rows and columns 默认单元格大小
                //11.88为100像素 
                xls.DefaultColWidth = 2340;
                xls.DefaultRowHeight = 285;

                //Set the cell values 设置单元格风格
                TFlxFormat fmt;
                fmt = xls.GetCellVisibleFormatDef(1, 1);
                fmt.Borders.Left.Style = TFlxBorderStyle.Thin;
                fmt.Borders.Left.ColorIndex = xls.NearestColorIndex(Color.Black);
                fmt.Borders.Right.Style = TFlxBorderStyle.Thin;
                fmt.Borders.Right.ColorIndex = xls.NearestColorIndex(Color.Black);
                fmt.Borders.Top.Style = TFlxBorderStyle.Thin;
                fmt.Borders.Top.ColorIndex = xls.NearestColorIndex(Color.Black);
                fmt.Borders.Bottom.Style = TFlxBorderStyle.Thin;
                fmt.Borders.Bottom.ColorIndex = xls.NearestColorIndex(Color.Black);
                fmt.HAlignment = THFlxAlignment.center;
                fmt.VAlignment = TVFlxAlignment.center;

                //设置表头
                //字体12号
                fmt.Font.Size20 = 240;
                //Merged Cells 合并单元格
                xls.MergeCells(1, 1, 2, dgv.ColumnCount);
                xls.SetCellFormat(1, 1, xls.AddFormat(fmt));
                xls.SetCellValue(1, 1, name);

                //设置表格值 加载数据
                //字体10号
                fmt.Font.Size20 = 200;
                int k = -1;
                for (int i=0;i<dgv.Columns.Count;i++)
                {
                    k++;
                    object cd = dgv.Columns[i].GetType();
                    if (dgv.Columns[i].Visible == false || dgv.Columns[i].GetType() == typeof(DataGridViewImageColumn))
                    {
                        k--;
                        continue;
                    }
                    xls.SetColWidth(k+1, Convert.ToInt32(0.1188 * dgv.Columns[i].Width*255)); 
                    xls.SetCellFormat(3, k + 1, xls.AddFormat(fmt));
                    xls.SetCellValue(3, k + 1, dgv.Columns[i].HeaderText);
                    for (int j = 0; j < dgv.Rows.Count; j++)
                    {
                        xls.SetCellFormat(j + 4, k + 1, xls.AddFormat(fmt));
                        if (dgv.Rows[j].Cells[i].Value.GetType() == typeof(DateTime))
                        {
                            xls.SetCellValue(j + 4, k + 1, Convert.ToDateTime(dgv.Rows[j].Cells[i].Value).ToString("yyyy/MM/dd HH:mm"));
                        }
                        else
                        {
                            xls.SetCellValue(j + 4, k + 1, dgv.Rows[j].Cells[i].Value);
                        }
                    }
                }

                //Cell selection and scroll position.默认单元格
                xls.SelectCell(1, 1, true);

                //Protection
                TSheetProtectionOptions SheetProtectionOptions;
                SheetProtectionOptions = new TSheetProtectionOptions(false);
                SheetProtectionOptions.SelectLockedCells = true;
                SheetProtectionOptions.SelectUnlockedCells = true;
                xls.Protection.SetSheetProtection(null, SheetProtectionOptions);

                xls.Save(dialog.FileName);
                try
                {
                    System.Diagnostics.Process.Start(dialog.FileName);
                }
                catch
                {
                    MessageBox.Show("文件已打开无法覆盖！", "提示", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
        }
    }


}
